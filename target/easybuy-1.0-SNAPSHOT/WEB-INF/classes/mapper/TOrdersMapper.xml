<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easybuy.Dao.TOrdersMapper">
  <resultMap id="BaseResultMap" type="com.easybuy.entity.TOrders">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CUSTMER_ID" jdbcType="INTEGER" property="custmerId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="TARGET_ADDR" jdbcType="VARCHAR" property="targetAddr" />
    <result column="TOTAL_COUNT" jdbcType="REAL" property="totalCount" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, CUSTMER_ID, CREATE_TIME, TARGET_ADDR, TOTAL_COUNT, STATUS
  </sql>
  <select id="selectByExample" parameterType="com.easybuy.entity.TOrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_orders
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_orders
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.easybuy.entity.TOrdersExample">
    delete from t_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.easybuy.entity.TOrders">
    insert into t_orders (ID, CUSTMER_ID, CREATE_TIME, 
      TARGET_ADDR, TOTAL_COUNT, STATUS
      )
    values (#{id,jdbcType=INTEGER}, #{custmerId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{targetAddr,jdbcType=VARCHAR}, #{totalCount,jdbcType=REAL}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.easybuy.entity.TOrders">
    insert into t_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="custmerId != null">
        CUSTMER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="targetAddr != null">
        TARGET_ADDR,
      </if>
      <if test="totalCount != null">
        TOTAL_COUNT,
      </if>
      <if test="status != null">
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="custmerId != null">
        #{custmerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="targetAddr != null">
        #{targetAddr,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        #{totalCount,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.easybuy.entity.TOrdersExample" resultType="java.lang.Long">
    select count(*) from t_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_orders
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.custmerId != null">
        CUSTMER_ID = #{record.custmerId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.targetAddr != null">
        TARGET_ADDR = #{record.targetAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.totalCount != null">
        TOTAL_COUNT = #{record.totalCount,jdbcType=REAL},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_orders
    set ID = #{record.id,jdbcType=INTEGER},
      CUSTMER_ID = #{record.custmerId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      TARGET_ADDR = #{record.targetAddr,jdbcType=VARCHAR},
      TOTAL_COUNT = #{record.totalCount,jdbcType=REAL},
      STATUS = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.easybuy.entity.TOrders">
    update t_orders
    <set>
      <if test="custmerId != null">
        CUSTMER_ID = #{custmerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="targetAddr != null">
        TARGET_ADDR = #{targetAddr,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        TOTAL_COUNT = #{totalCount,jdbcType=REAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.easybuy.entity.TOrders">
    update t_orders
    set CUSTMER_ID = #{custmerId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      TARGET_ADDR = #{targetAddr,jdbcType=VARCHAR},
      TOTAL_COUNT = #{totalCount,jdbcType=REAL},
      STATUS = #{status,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>