<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easybuy.Dao.TOrderDetailsMapper">
  <resultMap id="BaseResultMap" type="com.easybuy.entity.TOrderDetails">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PRODUCT_ID" jdbcType="INTEGER" property="productId" />
    <result column="SALE_PRICE" jdbcType="REAL" property="salePrice" />
    <result column="BUY_COUNT" jdbcType="INTEGER" property="buyCount" />
    <result column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PRODUCT_ID, SALE_PRICE, BUY_COUNT, ORDER_ID
  </sql>
  <select id="selectByExample" parameterType="com.easybuy.entity.TOrderDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order_details
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order_details
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.easybuy.entity.TOrderDetailsExample">
    delete from t_order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.easybuy.entity.TOrderDetails">
    insert into t_order_details (ID, PRODUCT_ID, SALE_PRICE, 
      BUY_COUNT, ORDER_ID)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{salePrice,jdbcType=REAL}, 
      #{buyCount,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.easybuy.entity.TOrderDetails">
    insert into t_order_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="salePrice != null">
        SALE_PRICE,
      </if>
      <if test="buyCount != null">
        BUY_COUNT,
      </if>
      <if test="orderId != null">
        ORDER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=REAL},
      </if>
      <if test="buyCount != null">
        #{buyCount,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.easybuy.entity.TOrderDetailsExample" resultType="java.lang.Long">
    select count(*) from t_order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order_details
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        PRODUCT_ID = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.salePrice != null">
        SALE_PRICE = #{record.salePrice,jdbcType=REAL},
      </if>
      <if test="record.buyCount != null">
        BUY_COUNT = #{record.buyCount,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order_details
    set ID = #{record.id,jdbcType=INTEGER},
      PRODUCT_ID = #{record.productId,jdbcType=INTEGER},
      SALE_PRICE = #{record.salePrice,jdbcType=REAL},
      BUY_COUNT = #{record.buyCount,jdbcType=INTEGER},
      ORDER_ID = #{record.orderId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.easybuy.entity.TOrderDetails">
    update t_order_details
    <set>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=INTEGER},
      </if>
      <if test="salePrice != null">
        SALE_PRICE = #{salePrice,jdbcType=REAL},
      </if>
      <if test="buyCount != null">
        BUY_COUNT = #{buyCount,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        ORDER_ID = #{orderId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.easybuy.entity.TOrderDetails">
    update t_order_details
    set PRODUCT_ID = #{productId,jdbcType=INTEGER},
      SALE_PRICE = #{salePrice,jdbcType=REAL},
      BUY_COUNT = #{buyCount,jdbcType=INTEGER},
      ORDER_ID = #{orderId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>